---
# tasks file for roles/splunk_ca/tasks/create_self_signed_ca.yml
# This file is part of the Ansible role for Splunk CA management.
# It is used to create a self-signed CA certificate and private key.
# The tasks are designed to be idempotent and can be run multiple times without side effects.
# The tasks are executed on the localhost to ensure that the CA certificate and key are generated in a controlled environment.
# The tasks include creating a directory for the CA files, generating a private key, creating a CSR, and signing the certificate.

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ splunkca_directory }}"
    state: directory
    mode: '0755'
  delegate_to: localhost
  run_once: true
  failed_when: splunkca_directory == "undefined"

- name: Create private key with password protection
  community.crypto.openssl_privatekey:
    path: "{{ splunkca_privatekey_path }}"
    passphrase: "{{ splunkca_passphrase }}"
  delegate_to: localhost
  run_once: true

- name: Create certificate signing request (CSR) for CA certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ splunkca_privatekey_path }}"
    privatekey_passphrase: "{{ splunkca_passphrase }}"
    common_name: Ansible CA
    use_common_name_for_san: false  # since we do not specify SANs, don't use CN as a SAN
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr
  delegate_to: localhost
  run_once: true

- name: Create self-signed CA certificate from CSR
  community.crypto.x509_certificate:
    path: "{{ splunkca_certificate_path }}"
    csr_content: "{{ ca_csr.csr }}"
    privatekey_path: "{{ splunkca_privatekey_path }}"
    privatekey_passphrase: "{{ splunkca_passphrase }}"
    provider: selfsigned
  delegate_to: localhost
  run_once: true