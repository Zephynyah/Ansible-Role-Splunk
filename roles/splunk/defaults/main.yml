---
# Defaults file for Splunk role
# Any undefined variables here should be configured in `group_vars` or `host_vars`.

# General settings
slack_channel: undefined
slack_token: undefined
splunk_home: auto_determined  # Automatically set in tasks/main.yml
splunk_package_url: auto_determined  # Automatically set in tasks/main.yml
splunk_package_path: ~/  # Path to store Splunk package locally
splunk_package_version: 9.3.3  # Default Splunk version to install or update to
build_id: 75595d8f83ef #51ccf43db5bd  # Default build ID for Splunk package
splunk_package_arch: "{{ splunk_package_version is version(9.4, '<') | ternary('Linux-x86_64', 'linux-amd64') }}"
splunk_package_url_full: "https://download.splunk.com/products/splunk/releases/{{ splunk_package_version }}/linux/splunk-{{ splunk_package_version }}-{{ build_id }}-{{ splunk_package_arch }}.tgz"
splunk_package_url_uf: "https://download.splunk.com/products/universalforwarder/releases/{{ splunk_package_version }}/linux/splunkforwarder-{{ splunk_package_version }}-{{ build_id }}-{{ splunk_package_arch }}.tgz"
splunk_download_local: true  # If true, download to localhost and copy to hosts; if false, each host downloads individually
splunk_install_type: undefined  # Set to "full" or "uf" in inventory or group_vars
splunk_install_path: /opt  # Base directory for Splunk installation
splunk_nix_user: splunk
splunk_nix_group: splunk
splunk_admin_username: admin
splunk_admin_password: undefined  # Use ansible-vault to encrypt this value
splunk_configure_secret: false  # Set to true to configure splunk.secret
splunk_secret_file: splunk.secret  # Filename for splunk.secret in the "files" folder

least_privileged: false  # Do not change. This get automatically set in `tasks/main.yml` based on the version and install type.

# Local OS user and group settings
# These settings control whether to create a local OS user and group for Splunk
local_os_user: false  # Whenther or not to force creation of a user using the `luseradd` or not.
local_os_group: false  # Whether or not to force creation of a group using the `lgroupadd` or not.

# Licensing
splunk_license_file: []  # List of license files to copy to the host
splunk_license_group: Trial  # Default license group (Trial, Free, Enterprise, etc.)
splunk_uri_lm: undefined  # License manager URI

# Deployment server
splunk_uri_ds: undefined  # e.g. mydeploymentserver.mydomain.com:8089 ; Note that you must also configure the clientName var under either group_vars or host_vars for deploymentclient.conf to be configured
clientName: "undefined" 
phoneHomeIntervalInSecs: undefined # A phone home interval of at least 300 seconds (5 minutes) is generally recommended, but you can set this to a lower value if needed. Default is 60 seconds (1 minutes).
splunk_general_key: undefined  # Configures a pass4SymmKey in server.conf under the general stanza
splunk_ds_key: undefined  # Configures a pass4SymmKey in server.conf for authenticating against a deployment server

# Binding
splunk_configure_authentication: false
ad_bind_password: undefined  # Use ansible-vault encrypt_string, e.g. ansible-vault encrypt_string --ask-vault-pass 'var_value_to_encrypt' --name 'var_name'
splunk_authenticationconf: authentication.conf.j2

#Systemd settings
splunk_create_polkit: 0  # If set to 1 `enable boot-start` will create a polkit rules file allowing the 'splunk_nix_user' to restart the splunk service without authentication.
splunk_use_initd: false  # If set to true, the system will use init.d. Default false
splunk_use_systemd: true  # DO NOT EDIT. To use init.d, set `splunk_use_initd` to true.
splunk_force_kill: false
splunk_use_systemd_override: true # If set to true, the script will utilize service.d override for limits instaed of bloating unit file.
systemd_unit_full: Splunkd  # You can change this in `host_vars` or `group_vars` to customize the service name.
systemd_unit_uf: SplunkForwarder  # You can change this in `host_vars` or `group_vars` to customize the service name.

# Splunk Management settings
splunk_disable_mgmt_port: false  # If set to true, will disable splunkd management port during installation
splunk_mgmt_uri: "{{ ansible_fqdn }}"  # If the `ansible_fqdn` is not resolvable by other hosts, you can set it to something like `ansible_facts.default_ipv4.address` in `host_vars` or `group_vars` to use the IP address instead.
splunkd_port: 8089  # If changed, will overwrite the default port number used by splunkd

# Indexer clustering (IDXC)
splunk_idxc_enable: false
splunk_idxc_key: mypass4symmkey
splunk_idxc_rf: 2  # Replication factor
splunk_idxc_sf: 2  # Search factor
splunk_idxc_rep_port: 9887
splunk_idxc_label: myidxc
splunk_apply_cluster_bundle_retries: 3  # Retry attempts for cluster bundle apply
splunk_apply_cluster_bundle_delay: 60  # Delay (in seconds) between retries

# Search head clustering (SHC)
splunk_shc_key: mypass4symmkey
splunk_shc_label: myshc
splunk_shc_rf: 3  # Replication factor
splunk_shc_rep_port: 8100
splunk_shc_target_group: shc
splunk_shc_deployer: "{{ groups['shdeployer'] | first }}"  # Deployer for SHC
splunk_shc_uri_list: >-
  {% for h in groups[splunk_shc_target_group] %}
  https://{{ hostvars[h].splunk_mgmt_uri }}:{{ splunkd_port }}
  {% if not loop.last %},{% endif %}
  {% endfor %}
splunk_apply_shcluster_bundle_retries: 3  # Retry attempts for SHC bundle apply
splunk_apply_shcluster_bundle_delay: 60  # Delay (in seconds) between retries

# Firewall configuration
configure_firewall: false  # Whether to configure the firewall
splunk_firewall_service: splunk  # Firewall service name for Splunk
# Firewall port presets - reference these in group_vars to assign them to splunk
splunk_firewall_ports:  # List of ports to allow through the firewall
  - "{{ splunkweb_port }}"
  - "{{ splunkapi_port }}"
splunkweb_port: { desc: "Splunk Web", protocol: "tcp", number: 8000 }
splunkhec_port: { desc: "Splunk HEC", protocol: "tcp", number: 8088 }
splunktcpin_port: { desc: "Splunk TCPIN", protocol: "tcp", number: 9997 }
splunkapi_port: { desc: "Splunk API", protocol: "tcp", number: "{{ splunkd_port }}" }
splunkidxcrep_port: { desc: "Splunk Indexer Clustering Replication", protocol: "tcp", number: "{{ splunk_idxc_rep_port }}" }
splunkshcrep_port: { desc: "Splunk Search Head Clustering Replication", protocol: "tcp", number: "{{ splunk_shc_rep_port }}" }

# Linux and scripting
add_crashlog_script: false  # Install script to clean up crash logs older than 7 days
add_diag_script: false  # Install script to clean up diag files older than 30 days
add_pstack_script: false  # Install pstack generation script for troubleshooting
configure_dmesg: false  # Configure dmesg access for Splunk user
install_utilities: false  # Install troubleshooting utilities
use_tuned_thp: false  # Use tuned profile for Transparent Huge Pages (THP)

# Git configuration for app deployment
git_local_clone_path: ~/  # Base directory for cloning repositories
git_server: undefined  # Git server URI (e.g., ssh://git@mygithost:1234)
git_key: undefined  # Path to SSH key for Git
git_project: undefined
git_version: master  # Default branch to clone
app_relative_path: ""  # Sub-path within the repository to sync
splunk_app_deploy_path: undefined  # Path under $SPLUNK_HOME/ to deploy apps
splunk_auditd_configure: false  # Whether or not to install auditd filtering rules for splunk launched executables

# Miscellaneous
start_splunk_handler_fired: false  # Internal variable to prevent unnecessary restarts