---
## Explanation:
# Check if SSH Key Pair Exists:

# Uses the stat module to check if the private key (~/.ssh/id_rsa) already exists on the control node.
# Generate SSH Key Pair:

# If the key pair does not exist, the ssh-keygen command is run to generate a new RSA key pair.
# Read Public Key:

# Uses the slurp module to read the public key (~/.ssh/id_rsa.pub) from the control node.
# Ensure .ssh Directory Exists:

# Ensures the .ssh directory exists on the target hosts with the correct permissions.
# Add Public Key to authorized_keys:

# Adds the public key to the ~/.ssh/authorized_keys file on the target hosts, ensuring it is properly formatted and does not duplicate entries.

## Run the playbook:
# ansible-playbook -i inventories/dev/inventory.yml ansible_ssh.yml

- name: Generate and distribute SSH key pair
  hosts: rh8-dns-1
  gather_facts: false

  vars:
    private_key_file: ~/.ssh/id_ssh_ed25519
    public_key_file: ~/.ssh/id_ssh_ed25519.pub

  tasks:
    - name: Check if SSH key pair exists
      ansible.builtin.stat:
        path: "{{ private_key_file }}"
      delegate_to: localhost
      register: ssh_key_status
      run_once: true

    - name: Generate SSH key pair if not present
      openssh_keypair:
        path: "{{ private_key_file }}"
        comment : "Ansible Control Node"
        type: ed25519
      delegate_to: localhost
      when: not ssh_key_status.stat.exists
      run_once: true

    - name: Read public key
      ansible.builtin.slurp:
        src: "{{ public_key_file }}"
      delegate_to: localhost
      register: public_key

    - name: Ensure authorized_keys directory exists
      ansible.builtin.file:
        path: "~/.ssh"
        state: directory
        mode: '0700'
      become: true

    - name: Add public key to authorized_keys
      ansible.builtin.lineinfile:
        path: "~/.ssh/authorized_keys"
        line: "{{ public_key.content | b64decode }}"
        create: true
        mode: '0600'

